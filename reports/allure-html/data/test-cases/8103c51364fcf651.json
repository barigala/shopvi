{
  "uid" : "8103c51364fcf651",
  "name" : "test_savingsBanner",
  "fullName" : "tests.TestSuite.ShopTest#test_savingsBanner",
  "historyId" : "da6d735058f751ae839f64a0a7d73d0a",
  "time" : {
    "start" : 1729603822627,
    "stop" : 1729603822793,
    "duration" : 166
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Savings Banner not found",
  "statusTrace" : "self = <tests.ShopTEST.ShopTest testMethod=test_savingsBanner>\n\n    @pytest.mark.run(order=16)\n    def test_savingsBanner(self):\n        print(\"TC10: Verify the Savings Banner\")\n        cl.allureLogs(\"Verifying Savings Banner\")\n        result = self.account_page.VerifyTotalSavings_Banner('total savings so far')\n>       assert result, \"Savings Banner not found\"\nE       AssertionError: Savings Banner not found\n\nShopTEST.py:177: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "beforeMethod",
    "time" : {
      "start" : 1729603822626,
      "stop" : 1729603822626,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_unittest_setUpClass_fixture_ShopTest",
    "time" : {
      "start" : 1729603650341,
      "stop" : 1729603650341,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "classObjects",
    "time" : {
      "start" : 1729603822626,
      "stop" : 1729603822626,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "beforeClass",
    "time" : {
      "start" : 1729603650341,
      "stop" : 1729603661450,
      "duration" : 11109
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Savings Banner not found",
    "statusTrace" : "self = <tests.ShopTEST.ShopTest testMethod=test_savingsBanner>\n\n    @pytest.mark.run(order=16)\n    def test_savingsBanner(self):\n        print(\"TC10: Verify the Savings Banner\")\n        cl.allureLogs(\"Verifying Savings Banner\")\n        result = self.account_page.VerifyTotalSavings_Banner('total savings so far')\n>       assert result, \"Savings Banner not found\"\nE       AssertionError: Savings Banner not found\n\nShopTEST.py:177: AssertionError",
    "steps" : [ {
      "name" : "Verifying Savings Banner",
      "time" : {
        "start" : 1729603822627,
        "stop" : 1729603822627,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "Error finding element with partial text 'total savings so far': 'bool' object has no attribute 'text'",
      "time" : {
        "start" : 1729603822792,
        "stop" : 1729603822792,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "13d63da252d36a88",
      "name" : "stdout",
      "source" : "13d63da252d36a88.txt",
      "type" : "text/plain",
      "size" : 59
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "beforeMethod::0",
    "time" : {
      "start" : 1729603822867,
      "stop" : 1729603822867,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_unittest_setUpClass_fixture_ShopTest::0",
    "time" : {
      "start" : 1729603853403,
      "stop" : 1729603853403,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "beforeClass::0",
    "time" : {
      "start" : 1729603847987,
      "stop" : 1729603853402,
      "duration" : 5415
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "run(order=16)"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "TestSuite"
  }, {
    "name" : "subSuite",
    "value" : "ShopTest"
  }, {
    "name" : "host",
    "value" : "SunilBarigala"
  }, {
    "name" : "thread",
    "value" : "29108-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.TestSuite"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=16)", "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')" ]
  },
  "source" : "8103c51364fcf651.json",
  "parameterValues" : [ ]
}